# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17AfOEFzn8Gx4u2aP6x4m4m7EJkeG85rz
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data = pd.read_csv('Social_Network_Ads.csv')
X = data.iloc[:,:-1].values
y = data.iloc[:,-1].values

#Splitting the data
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=0)

y_train

#Feature Scaling because if enhance  the performance of an algorithm
from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

print(X_train)
print(X_test)

"""### **SVM**

"""

from sklearn.svm import SVC
#classifier = SVC(kernel ='rbf', random_state=0) #90% accuracy
classifier = SVC(kernel ='rbf', random_state=0) #93% accuracy
classifier.fit(X_train, y_train)

classifier.predict([[30, 80000]])

y_pred = classifier.predict(X_test)

print("[Actual Value  Predicted Value]")
print(np.concatenate((y_test.reshape(len(y_test), 1), y_pred.reshape(len(y_pred), 1)), 1))

#Confusion Matrix
from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test, y_pred)
print(cm)
print(accuracy_score(y_test, y_pred))

